Object
  - without( array, values|keys ) #Loại trừ đi các key, value   
    array_diff( $array, $value );
    array_diff_key( $array, array_flip( $keys ) );
    
  - pick( array, keys ) #Chỉ lấy một số field trong list keys
    array_intersect_key( $array, array_flip( $keys ) );	  
  
Collection
  - where( list, properties )
    array_filter( $list, function( $item ) use ( $properties ) {
        $diff = array_diff_assoc( $properties, $item );
        return empty( $diff ) ? true : false;
    });
    
  - pluck( list, keys ) #Lấy một số field của row trong list $properties = [ 'id', 'age' ]
    array_map( function( $item ) use ( $keys ) {
	return array_intersect_key( $item, array_flip( $keys ) );
    }, $list);
    
  - SUM & COUNT
    array_reduce($list, function( $initial, $item ){
	$initial[ 'age' ] += $item[ 'age' ]; 
	return $initial;
    }, [ 'age' => 0 ]);

MORE
  - Gán value vào keys được sort
    $data = [ [id:5], [id:1], [id:9], [id:3] ];
    $keys = [ 1, 3, 5, 9, 15, 20 ];
    ----------------------------------------------------------------
    $out  = [ 1: [id: 1], 3: [id: 3], 5: [id: 5], 9:[id: 9] ]
    ----------------------------------------------------------------
    
    $outList = array_fill_keys( 
    	array_intersect( $keys, array_column( $list, 'id' ) ), 
	''
    );

    array_walk( $list, function( $value, $key ) use ( &$outList ) {
        if( isset( $outList[ $value[ 'id' ] ] ) ) {
            $outList[ $value[ 'id' ] ] = $value;
        }
    });

  - listData
    array_column( $list, $valueKey, $idKey );    
    
  - DATE 
    http://www.w3schools.com/php/php_ref_date.asp
    
  
    
