3. HTML
	- charset($charset=null)
	- css(mixed $path, array $options =[])
		* echo $this->Html->css('forms'); /webroot/css/
		* echo $this->Html->css(['forms', 'tables', 'menu']); /webroot/css/
		* echo $this->Html->css('DebugKit.toolbar.css'); /plugins/DebugKit/webroot/css/toolbar.css
		* echo $this->Html->css('Blog.common.css', ['plugin' => false]); /webroot/css/Blog.common.css
	
	- style(array $data, boolean $oneline = true)
		echo $this->Html->style([
			'background' => '#633',
			'border-bottom' => '1px solid #000',
			'padding' => '10px'
		]);
	- script(mixed $url, mixed $options)
		echo $this->Html->script('scripts');
		echo $this->Html->script(['jquery', 'wysiwyg', 'scripts']);
		echo $this->Html->script('http://code.jquery.com/jquery.min.js');
		
		echo $this->Html->script('wysiwyg', ['block' => 'scriptBottom']);
			* Thêm script vào block
			* echo $this->fetch('scriptBottom');
			
		echo $this->Html->script('DebugKit.toolbar.js'); //plugins/DebugKit/webroot/js/toolbar.js 
		echo $this->Html->script('Blog.plugins.js', ['plugin' => false]);
		
	- meta(string|array $type, string $url = null, array $options =[])
		+ $options['type']
			html: text/html
			rss: application/rss+xml
			atom: application/atom+xml
			icon: image/x-icon
			
	- docType(string $type = 'html5')	
		html4-strict 	HTML4 Strict
		html4-trans 	HTML4 Transitional
		html4-frame 	HTML4 Frameset
		html5 			HTML5
		xhtml-strict 	XHTML1 Strict
		xhtml-trans 	XHTML1 Transitional
		xhtml-frame 	XHTML1 Frameset
		xhtml11 		XHTML1.1
	
	- image(string $path, array $options =[])
		+ $options
			* url: Có tag <a> bọc ngoài
			* fullBase: Đường dẫn tuyệt đối
			
		$this->Html->image('DebugKit.icon.png'); //plugins/DebugKit/webroot/img/icon.png
		echo $this->Html->image('Blog.icon.png', ['plugin' => false]); /webroot/img/Blog.icon.png
		
	- link(string $title, mixed $url = null, array $options =[])
		+ $url['_full'] : Đường dẫn tuyệt đối
		
	- media(string|array $path, array $options)
		+ $options
			* type: audio, video
			* text
			* pathPrefix
			* fullBase
			
			<?= $this->Html->media('video.mp4', [
				 'fullBase' => true,
				 'text' => 'Fallback text'
			 ]) ?>

			// Output
			<video src="http://www.somehost.com/files/video.mp4">Fallback text</video>

			<?= $this->Html->media(
				 ['video.mp4', ['src' => 'video.ogg', 'type' => "video/ogg; codecs='theora, vorbis'"]],
				 ['autoplay']
			) ?>

			// Output
			<video autoplay="autoplay">
			 <source src="/files/video.mp4" type="video/mp4"/>
			 <source src="/files/video.ogg" type="video/ogg; codecs='theora, vorbis'"/>
			</video>

	- scriptBlock($code, $options =[])
	- scriptStart($options =[])
	- scriptEnd()
		-> Sử dụng echo $this->fetch('script');
		
	- nestedList(array $list, array $options =, []array $itemOptions =[])
		Xuất ra ul, ol
	
	- tableHeaders(array $names, array $trOptions = null, array $thOptions = null)
	- tableCells(array $data, array $oddTrOptions = null, array $evenTrOptions = null, $useCount = false, $continueOddEven = true)
	- templates($templates)
		// Load templates from config/my_html.php
		$this->Html->templates('my_html.php');

		// Load specific templates.
		$this->Html->templates([
			'javascriptlink' => '<script src="{{url}}" type="text/javascript"{{attrs}}></script>'
		]);
		
	- addCrumb(string $name, string $link = null, mixed $options = null)
	- getCrumbs(string $separator = '&raquo;', string $startText = false)
	- getCrumbList(array $options =, []$startText = false)
	

		
		