5. Paginator
	- http://book.cakephp.org/3.0/en/views/helpers/paginator.html
	- http://book.cakephp.org/3.0/en/controllers/components/pagination.html
	
	- Controller
		+ public $paginate : Định nghĩa giá trị mặc định cho function $this->paginate()
			+ public $paginate = [
				'Options' => [
					'limit' => 25,
					'conditions' => ['autoload' => 'no']
				]
			  ];
			  
			  $this->paginate( 'Options' )
			  $this->paginate( $this->Options )
	
	- View
		+ Thay đổi templates //Cake\View\Helper\PaginatorHelper::_defaultConfig.templates		
			nextActive, nextDisabled, prevActive, prevDisabled
			counterRange, counterPages, first, last, number, current
			ellipsis, sort, sortAsc, sortDesc
			
			Trong AppView.initialize
			* $this->loadHelper('Paginator', ['templates' => 'paginator-templates']); /config/paginator-templates.php
			* $this->loadHelper('Paginator', ['templates' => 'MyPlugin.paginator-templates']);

			Hoặc có thể thay đổi trực tiếp
			$this->Paginator->templates([
				'number' => '<em><a href="{{url}}">{{text}}</a></em>'
			]);
			
		+ Xử lý header để hiển thị title, sort
			* sort($key, $title = null, $options =[])
				+ $options
					 * escape 		Whether you want the contents html entity encoded, defaults to true.
					 * model 		The model to use, defaults to PaginatorHelper::defaultModel().
					 * direction 	The default direction to use when this link isn't active.
					 * lock 		Lock direction. Will only use the default direction then, defaults to false.
				+ Cake\View\Helper\PaginatorHelper::_defaultConfig.templates.[sort, sortAsc, sortDesc, sortAscLocked, sortDescLocked]	
		+ Xử lý pager
			* numbers($options =[]) : List number chính giữa
				- `before` 		Content to be inserted before the numbers, but after the first links.
				- `after` 		Content to be inserted after the numbers, but before the last links.
				- `model` 		Model to create numbers for, defaults to PaginatorHelper::defaultModel()
				- `modulus` 	How many numbers to include on either side of the current page, defaults to 8.
								Set to `false` to disable and to show all numbers.
				- `first` 		Whether you want first links generated, set to an integer to define the number of 'first'
								links to generate. If a string is set a link to the first page will be generated with the value
								as the title.
				- `last` 		Whether you want last links generated, set to an integer to define the number of 'last'
								links to generate. If a string is set a link to the last page will be generated with the value
								as the title.
				- `templates` 	An array of templates, or template file name containing the templates you'd like to
								use when generating the numbers. The helper's original templates will be restored once
								numbers() is done.
				- `url` 		An array of additional URL options to use for link generation.
				
			* prev($title = '<< Previous', $options =[])
				- $options
					* escape 		Whether you want the contents HTML entity encoded, defaults to true.
					* model 		The model to use, defaults to PaginatorHelper::defaultModel().
					* disabledTitle The text to use when the link is disabled. Defaults to the $title parameter.

			* next($title = 'Next >>', $options =[])
			* first($first = '<< first', $options =[])
			* last($last = 'last >>', $options =[])
			
			* current(string $model = null) //Trang hiện tại
			* hasNext(string $model = null)
			* hasPrev(string $model = null)
			* hasPage(string $model = null, integer $page = 1)
			* counter($options =[]) //Trả về chuỗi với các tham số sau
				{{page}} - the current page displayed.
				{{pages}} - total number of pages.
				{{current}} - current number of records being shown.
				{{count}} - the total number of records in the result set.
				{{start}} - number of the first record being displayed.
				{{end}} - number of the last record being displayed.
				{{model}} - The pluralized human form of the model name. If your model was ‘RecipePage’, {{model}} would be ‘recipe pages’.
				
				echo $this->Paginator->counter(
					'Page {{page}} of {{pages}}, showing {{current}} records out of
					 {{count}} total, starting on record {{start}}, ending on {{end}}'
				);
				
				//Cake\View\Helper\PaginatorHelper::_defaultConfig.templates.counterRange
				echo $this->Paginator->counter([
					'format' => 'range'
				]);
				
	- Như vậy sử dụng Paginator & $this->Html->tableCells() để hiển thị list
		+ $this->Paginator->sort() : Xử lý header.
		+ $this->Html->tableCells() : Xử lý Body, Xử dụng từ ResultSet như thế nào.
		+ $this->Paginator->[first, prev, number, next, last] : Để xử lý phân trang.