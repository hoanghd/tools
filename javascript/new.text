let
  https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Statements/let
async
await
import q from 'q'
import { RuntimeError } from './utils/ErrorHandler'

options.onError = options.onError.filter((fn) => {
        return typeof fn === 'function'
})

const onRejectedSafe = (err) => {
    if (typeof onRejected === 'function') {
        onRejected(err)
    }
}

class Multibrowser{
    constructor(){}
}

 client.next = function (...args) {}
 
 class BaseReporter extends events.EventEmitter {
    constructor () {
        super()
    }
 }
 
 
